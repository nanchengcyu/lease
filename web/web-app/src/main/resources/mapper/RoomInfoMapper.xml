<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nanchengyu.lease.web.app.mapper.RoomInfoMapper">
    <resultMap id="RoomItemVoMap" type="cn.nanchengyu.lease.web.app.vo.room.RoomItemVo" autoMapping="true">
        <id column="id" property="id"/>
        <association property="apartmentInfo" javaType="cn.nanchengyu.lease.model.entity.ApartmentInfo" autoMapping="true">
        <id column="apartment_id" property="id"/>
        </association>
        <collection property="graphVoList" ofType="cn.nanchengyu.lease.web.app.vo.graph.GraphVo"
                    select="selectGraphListByRoomId" column="id"/>

        <collection property="labelInfoList" ofType="cn.nanchengyu.lease.model.entity.LabelInfo"
                    select="selectLabelInfoListByRoomId" column="id"/>


    </resultMap>

    <select id="pageItem" resultMap="RoomItemVoMap">
        select ri.id,
        ri.room_number,
        ri.rent,
        ai.id apartment_id,
        ai.name,
        ai.introduction,
        ai.district_id,
        ai.district_name,
        ai.city_id,
        ai.city_name,
        ai.province_id,
        ai.province_name,
        ai.address_detail,
        ai.latitude,
        ai.longitude,
        ai.phone,
        ai.is_release
        from lease.room_info ri
        left join lease.apartment_info ai on ri.apartment_id = ai.id and ai.is_deleted = 0
        where ri.is_deleted = 0
        and ri.is_release = 1
        and ri.id not in (select room_id
        from lease.lease_agreement
        where is_deleted = 0
        and status in (2, 5))
        <where>
            ri.is_deleted = 0
            and ri.is_release = 1
            and ri.id not in(
            select room_id
            from lease_agreement
            where is_deleted = 0
            and status in(2,5))
            <if test="queryVo.provinceId != null">
                and ai.province_id = #{queryVo.provinceId}
            </if>
            <if test="queryVo.cityId != null">
                and ai.city_id = #{queryVo.cityId}
            </if>
            <if test="queryVo.districtId != null">
                and ai.district_id = #{queryVo.districtId}
            </if>
            <if test="queryVo.minRent != null and queryVo.maxRent != null">
                and (ri.rent &gt;= #{queryVo.minRent} and ri.rent &lt;= #{queryVo.maxRent})
            </if>
            <if test="queryVo.paymentTypeId != null">
                and ri.id in (
                select
                room_id
                from room_payment_type
                where is_deleted = 0
                and payment_type_id = #{queryVo.paymentTypeId}
                )
            </if>
        </where>
        <if test="queryVo.orderType == 'desc' or queryVo.orderType == 'asc'">
            order by ri.rent ${queryVo.orderType}
        </if>
    </select>

    <select id="selectGraphListByRoomId" resultType="cn.nanchengyu.lease.web.app.vo.graph.GraphVo">
        select name, url
        from lease.graph_info
        where is_deleted = 0
          and item_type = 2
          and item_id = #{id}
    </select>
    <select id="selectLabelInfoListByRoomId" resultType="cn.nanchengyu.lease.model.entity.LabelInfo">
        select id, type, name
        from lease.label_info
        where is_deleted = 0
          and id in (select label_id
                     from lease.room_label
                     where is_deleted = 0
                       and room_id = #{id})
    </select>
    <select id="pageItemByApartmentId" resultMap="RoomItemVoMap">
        select ri.id,
               ri.room_number,
               ri.rent,
               ai.id apartment_id,
               ai.name,
               ai.introduction,
               ai.district_id,
               ai.district_name,
               ai.city_id,
               ai.city_name,
               ai.province_id,
               ai.province_name,
               ai.address_detail,
               ai.latitude,
               ai.longitude,
               ai.phone,
               ai.is_release
        from lease.room_info ri
                 left join lease.apartment_info ai on ri.apartment_id = ai.id and ai.is_deleted = 0
        where ri.apartment_id = #{id}
          and ri.is_deleted = 0
          and ri.is_release = 1
          and ri.id not in (select room_id
                            from lease.lease_agreement
                            where is_deleted = 0
                              and status in (2, 5))


    </select>
</mapper>
